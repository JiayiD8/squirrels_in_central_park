[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Squirrels in Central Park",
    "section": "",
    "text": "1 Introduction\nWe choose to explore this dataset becuase we are interested in squirrels activities in NYC central parks. Central part plays a main role in New Yorkers life and tourist’s experience as it provide unique chance for people to interact with wildlife in the middle of the urban life. Understanding the activity patterns of squirrels can help us learn how to coexist with them and appreciate their role in the park’s ecosystem.\nThe dataset provides detailed information about the squirrels in central part, including their physical attributes such as fur color and age, sighting distribution across the park, and behaviors such as climbing, foraging, and making sounds. It also captures interactions between squirrels and humans, such as approaches, indifference, or avoidance, giving a sense that how these animals react to the appearence of human in their living environment.\nBy analyzing this data, we are explring questions about the squirrels’ location patterns, activity preferences, and social behaviors, while also discovering ecological trends within the park.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Description\nThe 2018 Central Park Squirrel Census dataset is a squirrel sighting data collected by 23 volunteer Squirrel Sighters in October of 2018. Throughout two weeks of time, they will walk around the Central Park and document each sighting of squirrels. From their website The Squirrel Census, they don’t have a specific data collecting and updating cycle, as they collected data in 2012, 2016, 2018 and 2020. This may due to the fact that this is more like a volunteering project. We are not using the latest data because it only includes 434 sightings but were collected from 24 different parks, making the data too sparse to analyze. Therefore, we choose the 2018 dataset that focused on the squirrels in Central Park. The dataset is in tabular format with 3023 rows and 31 columns. Each row is an instance of sighting squirrels. The columns capture different aspect of the sighting, including location, time, number of squirrels, what were squirrels doing, etc. The data were well-collected and well-documented, so there is no issue interpreting them. One issue was some data are in the type of Checkbox, but if downloading the dataset as a csv file, which is an available option, Checkbox type will be automaticly convert into True and False values. Additionally, there are some extra information columns that contains field notes, which we need to consider how to deal with.\nSource of data: Squirrel Census Dateset, The Squirrel Census official website",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\nImport required libraries and data:\n\n\nCode\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(tidyverse)\n\nsquirrel_data &lt;- read.csv(\"./2018_Central_Park_Squirrel_Census_-_Squirrel_Data_20241120.csv\")\n\n\nGet missing value count:\n\n\nCode\nsquirrel_data |&gt;\n  summarize(across(everything(), ~ sum(is.na(.)))) |&gt;\n  pivot_longer(everything(), names_to = \"Column\", values_to = \"MissingCount\") |&gt;\n  mutate(MissingPercentage = (MissingCount / nrow(squirrel_data)) * 100) |&gt;\n  arrange(desc(MissingPercentage)) |&gt;\n  head()\n\n\n# A tibble: 6 × 3\n  Column             MissingCount MissingPercentage\n  &lt;chr&gt;                     &lt;int&gt;             &lt;dbl&gt;\n1 X                             0                 0\n2 Y                             0                 0\n3 Unique.Squirrel.ID            0                 0\n4 Hectare                       0                 0\n5 Shift                         0                 0\n6 Date                          0                 0\n\n\nThe results in the above table are shown in a descending value, this means there seems to be no missing value for our dataset. However, with a more careful inspection of our data, there are missing values. It’s just all the missing values are empty cells instead of NA.\nConvert the missing value to NA:\n\n\nCode\nsquirrel_data &lt;- squirrel_data |&gt;\n  mutate(across(everything(), ~ na_if(as.character(.), \"\")))\n\nmissing_values &lt;- squirrel_data |&gt;\n  summarize(across(everything(), ~ sum(is.na(.)))) |&gt;\n  pivot_longer(everything(), names_to = \"Column\", values_to = \"MissingCount\") |&gt;\n  mutate(MissingPercentage = (MissingCount / nrow(squirrel_data)) * 100) |&gt;\n  arrange(desc(MissingPercentage))\n\nprint(missing_values, n = 15)\n\n\n# A tibble: 31 × 3\n   Column                           MissingCount MissingPercentage\n   &lt;chr&gt;                                   &lt;int&gt;             &lt;dbl&gt;\n 1 Color.notes                              2841             94.0 \n 2 Other.Interactions                       2783             92.1 \n 3 Other.Activities                         2586             85.5 \n 4 Specific.Location                        2547             84.3 \n 5 Highlight.Fur.Color                      1086             35.9 \n 6 Age                                       121              4.00\n 7 Above.Ground.Sighter.Measurement          114              3.77\n 8 Location                                   64              2.12\n 9 Primary.Fur.Color                          55              1.82\n10 X                                           0              0   \n11 Y                                           0              0   \n12 Unique.Squirrel.ID                          0              0   \n13 Hectare                                     0              0   \n14 Shift                                       0              0   \n15 Date                                        0              0   \n# ℹ 16 more rows\n\n\nWith the updated dataset, now we see a lot of missing values for some of the columns. Let’s create a graph to show the distribution of the these missing valus.\nPercentage of missing data:\n\n\nCode\nggplot(missing_values, aes(x = reorder(Column, -MissingPercentage), y = MissingPercentage)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(\n    title = \"Percentage of Missing Values by Column\",\n    x = \"Columns\",\n    y = \"Missing Percentage (%)\"\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nFor the columns with missing data, the top four all have more than 80% of missing data, some even reaching 95%. The fifth one also have around 35% missing data. However, these does not cause any major issue because these five columns hold the text data that serves as field notes. They record additional information about squirrel colors, how they interact with people, what they are doing and the specific location they were found like “under a tree”. These won’t affect our main exploratory analysis as we won’t be using them. But we will use them as notes when creating a interactive map to demonstrate the spacial distribution of squirrels within Central Park.\nFor the rest of the missing value, we may choose to either remove the rows directly, as they only take a small portion of the data, or assign a special value to them.\nNow we will take a closer look at the distribution of the columns with top five number of missing values.\nA more detailed visualization of the top five missing value with the library naniar\n\n\nCode\nlibrary(naniar)\ngg_miss_upset(squirrel_data) \n\n\n\n\n\n\n\n\n\nThe upset plot help show how missing value in the top five variable(with most NAs in the percentage plot) overlapping with each others. The horizontal bars at the bottom left is a brief view of the count for the top five missing value. The connected dots in the bottom providing information about which columns contribute to the overlapped missing count showed in the vertical bar above. For example, there are 1224 rows have missing values in all four variables (except highlight fur color). This indicates that more than 1/3 of all the cases, those columns that records additional notes other than previous Yes/No checks are all empty. As we doing further analysis, we can consider encoding those columns into Y/N factors variables based on having additional info or not.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
    "text": "3.1 Exploration of squirrels of different Primary Fur Color\nGeneral Questions: How do black, cinnamon and standard gray morphs of Eastern Gray squirrels (Sciurus Carolinensis) differ in their spatial distributions and activity patterns in Central Park?\nCode\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(tidyverse)\nlibrary(ggridges)\nlibrary(lubridate)\nlibrary(sf)\nlibrary(ggalluvial)\nlibrary(viridis)\nlibrary(scico)\nlibrary(forcats)\n\nsquirrel_data &lt;- read.csv(\"./2018_Central_Park_Squirrel_Census_-_Squirrel_Data_20241120.csv\")\nsquirrel_data &lt;- squirrel_data |&gt;\n  mutate(across(everything(), ~ na_if(as.character(.), \"\"))) |&gt;\n  drop_na(Age, Location, Primary.Fur.Color) |&gt;\n  filter(Age != \"?\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#exploration-of-squirrels-of-different-primary-fur-color",
    "href": "results.html#exploration-of-squirrels-of-different-primary-fur-color",
    "title": "3  Results",
    "section": "",
    "text": "3.1.1 What is the total number of sightings of black, cinnamon, and gray morphs of Eastern Gray squirrels within Central Park?\n\n\nCode\nggplot(squirrel_data, aes(x = fct_infreq(Primary.Fur.Color), fill = Primary.Fur.Color)) +\n  geom_bar() +\n  labs(\n    title = \"Counts by Primary Fur Color\",\n    x = \"Primary Fur Color\",\n    y = \"Count of Squirrels\"\n  ) +\n  theme(legend.position = \"none\") +\n  theme_minimal() +\n  scale_fill_manual(values = c('black', '#D2691E', 'grey'), guide = FALSE) \n\n\n\n\n\n\n\n\n\n\n\n3.1.2 What is the spatial distribution of black, cinnamon, and gray morphs of Eastern Gray squirrels across Central Park?\n\n\nCode\ncoord_sf_obj &lt;- squirrel_data |&gt;\n  st_as_sf(coords = c('X', 'Y'), crs = 4326) # crs=4326 refers to the \"Coordinate Reference System\" with EPSG code 4326. This ensures the coordinates are plot correctly.\n\nggplot() + \n    geom_sf(data = coord_sf_obj, aes(colour = squirrel_data$Primary.Fur.Color), \n            size = 1.5, shape = 1, alpha = .7) + \n    scale_colour_manual(values = c('black', '#D2691E', 'grey')) + \n    theme_minimal()  +\n    labs(title = 'Squirrel Sighting Locations by Color')\n\n\n\n\n\n\n\n\n\n\n\n3.1.3 How do sighted behaviors differ among black, cinnamon, and gray morphs of Eastern Gray squirrels in Central Park?\n\n\nCode\nlibrary(scales)\n\n# assuming squirrel_data has columns like Primary.Fur.Color, Running, Chasing, Climbing, Eating, Foraging \nproportion_data &lt;- squirrel_data |&gt;\n  pivot_longer(\n    cols = c(Running, Chasing, Climbing, Eating, Foraging), \n    names_to = \"Behavior\",\n    values_to = \"Observed\"\n  ) |&gt;\n  filter(Observed == \"true\") |&gt;\n  # Count number of squirrels per Behavior & Primary.Fur.Color\n  group_by(Primary.Fur.Color, Behavior) |&gt;\n  summarize(Count = n(), .groups = \"drop\")\n\n# stacked proportion bar chart\nggplot(proportion_data, aes(x = Primary.Fur.Color, y = Count, fill = Behavior)) +\n  geom_col(position = \"fill\", color = \"black\") +\n  scale_y_continuous(labels = percent_format()) +\n  labs(\n    title = \"Proportion of Behaviors by Primary Fur Color\",\n    x = \"Primary Fur Color\",\n    y = \"Proportion of Squirrels\",\n    fill = \"Behavior\"\n  ) +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set3\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#what-are-the-overall-eastern-gray-squirrels-spatiotemporal-distributions-and-activity-patterns-in-central-park",
    "href": "results.html#what-are-the-overall-eastern-gray-squirrels-spatiotemporal-distributions-and-activity-patterns-in-central-park",
    "title": "3  Results",
    "section": "3.2 What are the overall Eastern Gray squirrels’ spatiotemporal distributions and activity patterns in Central Park?",
    "text": "3.2 What are the overall Eastern Gray squirrels’ spatiotemporal distributions and activity patterns in Central Park?\n\n3.2.1 What is the spatial concentration of Eastern Gray squirrel sightings within Central Park?\n\n\nCode\n# Extract coordinates from the point data\nsquirrel_coords &lt;- squirrel_data %&gt;%\n  mutate(\n    coords = str_extract(Lat.Long, \"\\\\(.*\\\\)\"),\n    coords = str_remove_all(coords, \"[\\\\(\\\\)]\"),\n    longitude = as.numeric(word(coords, 1)),\n    latitude = as.numeric(word(coords, 2))\n  )\n\n# Create hexbin plot\nggplot(squirrel_coords, aes(x = longitude, y = latitude)) +\n  geom_hex(bins = 40) +  \n  scale_fill_viridis_c(option = \"plasma\", direction = 1) +  \n  theme_minimal() +\n  labs(\n    title = \"Squirrel Location Density\",\n    subtitle = \"Hexagon binning visualization\",\n    x = \"Longitude\",\n    y = \"Latitude\",\n    fill = \"Count\"\n  ) +\n  coord_fixed()  \n\n\n\n\n\n\n\n\n\n\n\n3.2.2 How does the frequency of Eastern Gray squirrel sightings vary across different times of day, different dates, and weather conditions in Central Park?\n\n\nCode\n# convert the Date column to proper date format\nsquirrel_data &lt;- squirrel_data |&gt;\n  mutate(\n    Date = as.Date(Date, format = \"%m%d%Y\"),\n    # make shift a factor with PM first so AM appears on top\n    Shift = factor(Shift, levels = c(\"PM\", \"AM\"))\n  )\n\n# ridgeline plot\nggplot(squirrel_data, aes(x = Date, y = Shift, fill = Shift)) +\n  geom_density_ridges(\n    alpha = 0.6,\n    scale = 0.9,\n    rel_min_height = 0.01\n  ) +\n  scale_fill_manual(\n    values = c(\"AM\" = \"#FDB462\", \"PM\" = \"#80B1D3\")\n  ) +\n  scale_x_date(\n    # Show every date on x-axis\n    date_breaks = \"1 day\",\n    date_labels = \"%b %d\",\n    expand = c(0.01, 0) \n  ) +\n  labs(\n    title = \"Distribution of Squirrel Sightings\",\n    subtitle = \"By Time of Day\",\n    x = \"Date\",\n    y = \"Shift\"\n  ) +\n  theme_ridges() +\n  theme(\n    legend.position = \"none\",\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank()\n  )\n\n\nPicking joint bandwidth of 0.896\n\n\n\n\n\n\n\n\n\n\n\n3.2.3 How are Eastern Gray squirrel’s activity patterns affected by age and environmental features?\n\n\nCode\nbehavior &lt;- squirrel_data |&gt;\n  select(Age, Running, Chasing, Climbing, Eating, Foraging, Shift) |&gt;\n  pivot_longer(\n    cols = c(Running, Chasing, Climbing, Eating, Foraging),\n    names_to = \"Behavior\",\n    values_to = \"Observed\"\n  ) |&gt;\n  filter(Observed == \"true\") |&gt;\n  # Summarize counts per Age, Behavior, and Shift\n  group_by(Age, Behavior, Shift) |&gt;\n  summarize(Count = n(), .groups = \"drop\") |&gt;\n  # Now group by Age and Shift to get the total count for that subset\n  group_by(Age, Shift) |&gt;\n  mutate(Proportion = Count / sum(Count)) |&gt;\n  ungroup()\n\nggplot(behavior, aes(x = Behavior, y = Proportion, fill = Age)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(\n    title = \"Comparison of Behaviors by Age and Shift (Proportion)\",\n    x = \"Behavior\",\n    y = \"Proportion of Squirrels\",\n    fill = \"Age Group\"\n  ) +\n  facet_wrap(~Shift) +\n  theme_minimal() +\n  scale_y_continuous(labels = percent_format()) +\n  scale_fill_brewer(palette = \"Blues\", direction = -1)\n\n\n\n\n\n\n\n\n\n\n\nCode\nbehavior_data &lt;- squirrel_data |&gt;\n  select(Age, Shift, Running, Chasing, Climbing, Eating, Foraging) |&gt;\n  pivot_longer(\n    cols = c(Running, Chasing, Climbing, Eating, Foraging),\n    names_to = \"Behavior\",\n    values_to = \"Observed\"\n  ) |&gt;\n  filter(Observed == \"true\") |&gt;\n  group_by(Shift, Age, Behavior) |&gt;\n  summarize(Count = n(), .groups = \"drop\")\n\n\n\n\nCode\nforaging_alluvial_data &lt;- squirrel_data %&gt;%\n  filter(Foraging == \"true\") %&gt;%\n  group_by(Shift, Location) %&gt;%\n  summarize(Count = n(), .groups = \"drop\") %&gt;%\n  mutate(\n    Shift = factor(Shift),\n    Location = factor(Location)\n  )\n\nggplot(foraging_alluvial_data,\n       aes(axis1 = Shift, axis2 = Location, y = Count, fill = Location)) +\n  geom_alluvium(color = \"black\") +\n  geom_stratum() +\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2) +\n  scale_x_discrete(expand = c(0.1, 0.1)) +\n  labs(\n    title = \"Foraging Patterns Across Shift and Location\",\n    x = \"\", \n    y = \"Count\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\nbehavior_location &lt;- squirrel_data |&gt;\n  select(Running, Chasing, Climbing, Eating, Foraging, Location) |&gt;\n  pivot_longer(\n    cols = c(Running, Chasing, Climbing, Eating, Foraging),\n    names_to = \"Behavior\",\n    values_to = \"Observed\"\n  ) |&gt;\n  filter(Observed == \"true\") |&gt;\n  group_by(Behavior, Location) |&gt;\n  summarize(Count = n(), .groups = \"drop\")  \n\nmosaic_table &lt;- xtabs(Count ~ Location + Behavior, data = behavior_location)\n\nvcd::mosaic(\n  ~ Behavior + Location,\n  data = mosaic_table,\n  direction = c(\"h\", \"v\"),\n  highlighting = \"Behavior\",\n  highlighting_fill = scico(5, palette = \"lajolla\"), # Using the La Jolla palette\n  shade = TRUE,\n  legend = FALSE,\n  main = \"Mosaic of Behaviors by Location\"\n)\n\n\n\n\n\n\n\n\n\n\n\n3.2.4 How do Eastern Gray squirrels interact with humans when being sighted?\n\n\nCode\nbubble_data &lt;- squirrel_data |&gt;\n  select(X, Y, Eating, Foraging, Approaches, Runs.from) |&gt;\n  pivot_longer(\n    cols = c(Eating, Foraging),\n    names_to = \"Behavior\",\n    values_to = \"Observed_Behavior\"\n  ) |&gt;\n  pivot_longer(\n    cols = c(Approaches, Runs.from),\n    names_to = \"Interaction\",\n    values_to = \"Observed_Interaction\"\n  ) |&gt;\n  filter(Observed_Behavior == \"true\" & Observed_Interaction == \"true\") |&gt;\n  group_by(X, Y, Behavior, Interaction) |&gt;\n  summarize(Count = n(), .groups = \"drop\") |&gt;\n  st_as_sf(coords = c(\"X\", \"Y\"), crs = 4326)\n\n# Plotting using geom_sf\nggplot() +\n  geom_sf(data = bubble_data, aes(color = Interaction), size = 3, shape = 1, alpha = 1) +\n  facet_wrap(~Behavior) +\n  labs(\n    title = \"Frequency of Human Interactions by Behavior and Location\",\n    size = \"Interaction Count\",\n    color = \"Behavior\"\n  ) +\n  theme_minimal(base_size = 14) +\n  scale_color_brewer(palette = \"Set1\")\n\n\n\n\n\n\n\n\n\n\n\nCode\nsound_interaction &lt;- squirrel_data |&gt;\n  select(Kuks, Quaas, Moans, Location, Approaches, Indifferent, Runs.from) |&gt;\n  pivot_longer(\n    cols = c(Approaches, Indifferent, Runs.from),\n    names_to = \"Interaction\",\n    values_to = \"Observed_Interaction\"\n  ) |&gt;\n  pivot_longer(\n    cols = c(Kuks, Quaas, Moans),\n    names_to = \"Sound\",\n    values_to = \"Sound_Value\"\n  ) |&gt;\n  filter(Sound_Value == \"true\", Observed_Interaction == \"true\") |&gt;\n  drop_na(Interaction, Sound) |&gt;\n  group_by(Location, Interaction, Sound) |&gt;\n  summarize(Freq = n(), .groups = \"drop\")\n\nggplot(sound_interaction,\n       aes(axis1 = Location, axis2 = Sound, axis3 = Interaction, y = Freq, fill = Sound)) +\n  geom_alluvium(color = \"black\") +\n  geom_stratum() +\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum))) +\n  labs(\n    title = \"Transition of Human Interactions Across location and sound\",\n    x = \"Categories\",\n    y = \"Count of Observed Behaviors\"\n  ) +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set3\")\n\n\n\n\n\n\n\n\n\n\n\nCode\n# coord_sf &lt;- squirrel_data |&gt;\n#   st_as_sf(coords = c('X', 'Y'), crs = 4326) |&gt;\n#   pivot_longer(\n#     cols = c(Running, Chasing, Climbing, Eating, Foraging), \n#     names_to = \"Behavior\",\n#     values_to = \"Observed\"\n#   ) |&gt;\n#   filter(Observed == \"true\") \n#   # No group_by needed if not summarizing\n# \n# ggplot() + \n#   geom_sf(data = coord_sf, aes(color = Primary.Fur.Color), \n#           size = 1.5, shape = 1, alpha = 0.7) + \n#   scale_color_manual(values = c('black', '#D2691E', 'grey')) + \n#   facet_wrap(~ Behavior) +\n#   theme_minimal() +\n#   labs(title = 'Squirrel Sighting Locations by Color')",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4  Interactive graph",
    "section": "",
    "text": "Code\n# Get the data for interactive graph\n# library(tidyverse)\n# library(jsonlite)\n# \n# squirrel_data &lt;- read.csv(\"./2018_Central_Park_Squirrel_Census_-_Squirrel_Data_20241120.csv\")\n# \n# squirrel_coords &lt;- squirrel_data |&gt;\n#   mutate(across(everything(), ~ na_if(as.character(.), \"\"))) |&gt;\n#   drop_na(Primary.Fur.Color) |&gt;\n#   select(X, Y, Primary.Fur.Color) |&gt;\n#   rename(longitude = X,\n#          latitude = Y,\n#          furColor = Primary.Fur.Color)\n# \n# # Export the data as JSON\n# write_json(squirrel_coords, \"squirrel_coords.json\")",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Interactive graph</span>"
    ]
  }
]