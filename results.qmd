# Results

```{r, message=FALSE, warning=FALSE}
library(ggplot2)
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggridges)
library(lubridate)

squirrel_data <- read.csv("./2018_Central_Park_Squirrel_Census_-_Squirrel_Data_20241120.csv")
squirrel_data <- squirrel_data |>
  mutate(across(everything(), ~ na_if(as.character(.), ""))) |>
  drop_na(Age, Location, Primary.Fur.Color) |>
  filter(Age != "?")
```

```{r}
library(sf)
coord_sf_obj <- squirrel_data |>
  st_as_sf(coords = c('X', 'Y'), crs = 4326) 
ggplot() + 
    geom_sf(data = coord_sf_obj, aes(colour = squirrel_data$Primary.Fur.Color), 
            size = 1.5, shape = 1, alpha = .7) + 
    scale_colour_manual(values = c('black', 'brown','grey')) + 
    theme_minimal()  +
    labs(title = 'Squirrel Sighting Locations by Colour')
```

```{r}
library(sf)
library(ggplot2)

# Convert to sf object first
coord_sf_obj <- squirrel_data |> 
  st_as_sf(coords = c('X', 'Y'), crs = 4326)

# Extract coordinates for density calculation
coords <- st_coordinates(coord_sf_obj)

# Create the plot
ggplot() +
  # Add filled contours with transparency
  stat_density_2d(data = as.data.frame(coords),
                 aes(X, Y, color = after_stat(level)),
                 geom = "density_2d") +
  theme_minimal() +
  labs(title = 'Squirrel Density Contours by Location',
       x = 'Longitude',
       y = 'Latitude') +
  # Adjust aspect ratio for better geographic representation
  coord_fixed()
```

```{r}
library(sf)
coord_sf_obj <- squirrel_data |>
  st_as_sf(coords = c('X', 'Y'), crs = 4326) 

ggplot() + 
    # Base layer with squirrel points
    geom_sf(data = coord_sf_obj, aes(colour = squirrel_data$Primary.Fur.Color), 
            size = 1.5, shape = 1, alpha = .7) +
    # Add density contours
    stat_density_2d(data = squirrel_data,
                   aes(x = X, y = Y),
                   color = "navy",
                   alpha = 0.5,
                   linewidth = 0.5) +
    scale_colour_manual(values = c('black', 'brown','grey')) + 
    theme_minimal() +
    labs(title = 'Squirrel Sighting Locations by Colour',
         caption = 'Contour lines show density of sightings')
```
```{r}
# Convert the Date column to proper date format
squirrel_data <- squirrel_data %>%
  mutate(
    Date = as.Date(Date, format = "%m%d%Y"),
    # Make Shift a factor with PM first so AM appears on top
    Shift = factor(Shift, levels = c("PM", "AM"))
  )

# Create the ridgeline plot
ggplot(squirrel_data, aes(x = Date, y = Shift, fill = Shift)) +
  geom_density_ridges(
    alpha = 0.6,
    scale = 0.9,
    rel_min_height = 0.01
  ) +
  scale_fill_manual(
    values = c("AM" = "#FDB462", "PM" = "#80B1D3")
  ) +
  scale_x_date(
    # Show every date on x-axis
    date_breaks = "1 day",
    date_labels = "%b %d",
    expand = c(0.01, 0) 
  ) +
  labs(
    title = "Distribution of Squirrel Sightings",
    subtitle = "By Time of Day",
    x = "Date",
    y = "Shift"
  ) +
  theme_ridges() +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 45, hjust = 1),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank()
  )
```


```{r}
behavior_data <- squirrel_data |>
  select(Age, Running, Chasing, Climbing, Eating, Foraging, Shift) |>
  pivot_longer(
    cols = c(Running, Chasing, Climbing, Eating, Foraging),
    names_to = "Behavior",
    values_to = "Observed"
  ) |>
  filter(Observed == "true") |>
  group_by(Age, Behavior, Shift) |>
  summarize(Count = n(), .groups = "drop")
```


```{r}
ggplot(behavior_data, aes(x = Behavior, y = Count, fill = Age)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
    title = "Comparison of Behaviors by Age and Shift",
    x = "Behavior",
    y = "Count of Squirrels",
    fill = "Age Group"
  ) +
  facet_wrap(~Shift) +
  theme_minimal() +
  scale_fill_brewer(palette = "Blues", direction = -1)

```

```{r}
# library(plotly)
# behavior_data <- squirrel_data |>
#   select(Shift, Running, Chasing, Climbing, Eating, Foraging) |>
#   pivot_longer(
#     cols = c(Running, Chasing, Climbing, Eating, Foraging),
#     names_to = "Behavior",
#     values_to = "Observed"
#   ) |>
#   filter(Observed == "true") |>
#   group_by(Shift, Behavior) |>
#   summarize(Count = n(), .groups = "drop") |>
#   mutate(Proportion = Count / sum(Count))  
#
# sunburst_data <- behavior_data |>
#   mutate(
#     ids = paste(Shift, Behavior, sep = "-"),  # unique ID for each slice
#     labels = Behavior,
#     parents = Shift  # parent category for each behavior
#   )
#
# plot_ly(
#   sunburst_data,
#   labels = ~labels,
#   parents = ~parents,
#   values = ~Proportion,
#   type = 'sunburst',
#   branchvalues = 'total'
# ) %>%
#   layout(
#     title = list(
#       text = "Proportion of Behaviors by Shift",
#       font = list(size = 20)
#     ),
#     colorway = RColorBrewer::brewer.pal(8, "Set2")  
#   )

```

```{r}
library(ggalluvial)
behavior_data <- squirrel_data |>
  select(Age, Shift, Running, Chasing, Climbing, Eating, Foraging) |>
  pivot_longer(
    cols = c(Running, Chasing, Climbing, Eating, Foraging),
    names_to = "Behavior",
    values_to = "Observed"
  ) |>
  filter(Observed == "true") |>
  group_by(Shift, Age, Behavior) |>
  summarize(Count = n(), .groups = "drop")  

ggplot(behavior_data,
       aes(axis1 = Age, axis2 = Shift, y = Count, fill = Behavior)) +
  geom_alluvium(aes(fill = Behavior)) +
  geom_stratum() +
  geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
  labs(
    title = "Transition of Behaviors Across Shift and Age",
    x = "Categories",
    y = "Count of Observed Behaviors"
  ) +
  theme_minimal() +
  scale_fill_brewer(palette = "Set3")

```
```{r}
interaction_data <- squirrel_data |>
  select(Running, Climbing, Eating, Foraging, Approaches, Runs.from) |>
  pivot_longer(
    cols = c(Running, Climbing, Eating, Foraging),
    names_to = "Behavior",
    values_to = "Observed_Behavior"
  ) |>
  pivot_longer(
    cols = c(Approaches, Runs.from),
    names_to = "Interaction",
    values_to = "Observed_Interaction"
  ) |>
  filter(Observed_Behavior == "true" & Observed_Interaction == "true") |>
  group_by(Behavior, Interaction) |>
  summarize(Count = n(), .groups = "drop")

ggplot(interaction_data,
       aes(axis1 = Behavior, axis2 = Interaction, y = Count, fill = Behavior)) +
  geom_alluvium() +
  geom_stratum() +
  geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
  labs(
    title = "Behaviors and Human Interactions",
    x = "Categories",
    y = "Count of Observed Behaviors",
    fill = "Behavior"
  ) +
  theme_minimal(base_size = 14) +
  scale_fill_viridis_d()

```

```{r fig.width= 10}
bubble_data <- squirrel_data |>
  select(X, Y, Eating, Foraging, Approaches, Runs.from) |>
  pivot_longer(
    cols = c(Eating, Foraging),
    names_to = "Behavior",
    values_to = "Observed_Behavior"
  ) |>
  pivot_longer(
    cols = c(Approaches, Runs.from),
    names_to = "Interaction",
    values_to = "Observed_Interaction"
  ) |>
  filter(Observed_Behavior == "true" & Observed_Interaction == "true") |>
  group_by(X, Y, Behavior, Interaction) |>
  summarize(Count = n(), .groups = "drop")

ggplot(bubble_data, aes(x = X, y = Y, size = Count, color = Behavior), shape = 1) +
  geom_point(alpha = 0.7) +
  facet_wrap(~Interaction) +
  labs(
    title = "Frequency of Human Interactions by Behavior and Location",
    x = "Longitude (X)",
    y = "Latitude (Y)",
    size = "Interaction Count",
    color = "Behavior"
  ) +
  theme_minimal(base_size = 14) +
  scale_color_brewer(palette = "Set3")

```

